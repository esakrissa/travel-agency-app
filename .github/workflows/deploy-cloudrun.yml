name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]

env:
  PROJECT_ID: travel-agency-448103
  REGION: us-central1
  SERVICE_NAME: travel-agency-service
  REPOSITORY: travel-agency-repo

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v3

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          token_format: 'access_token'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          install_components: 'gke-gcloud-auth-plugin'

      - name: Verify Authentication and Project
        run: |
          echo "üîç Verifying authentication..."
          gcloud auth list
          echo "üìã Current project settings:"
          gcloud config list project
          echo "üè¢ Project info:"
          gcloud projects describe ${{ env.PROJECT_ID }}

      - name: Create Artifact Registry Repository
        run: |
          echo "üèóÔ∏è Creating/Verifying Artifact Registry repository..."
          # First check if Artifact Registry API is enabled
          if ! gcloud services list --enabled | grep -q artifactregistry.googleapis.com; then
            echo "‚ö†Ô∏è Artifact Registry API not enabled. Please enable it in the Google Cloud Console:"
            echo "https://console.cloud.google.com/apis/library/artifactregistry.googleapis.com?project=${{ env.PROJECT_ID }}"
            exit 1
          fi
          
          # Try to create repository
          gcloud artifacts repositories create ${{ env.REPOSITORY }} \
            --repository-format=docker \
            --location=${{ env.REGION }} \
            --description="Travel Agency Docker repository" \
            || echo "Repository may already exist, continuing..."

      - name: Configure Docker for Artifact Registry
        run: |
          echo "üîß Configuring Docker authentication..."
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Build and Push Container
        run: |
          echo "üì¶ Building Docker image..."
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/app:${{ github.sha }} \
            --build-arg NODE_ENV=production .
          
          echo "‚¨ÜÔ∏è Pushing to Artifact Registry..."
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/app:${{ github.sha }}

      - name: Deploy to Cloud Run
        run: |
          echo "üöÄ Deploying to Cloud Run..."
          # Check if Cloud Run API is enabled
          if ! gcloud services list --enabled | grep -q run.googleapis.com; then
            echo "‚ö†Ô∏è Cloud Run API not enabled. Please enable it in the Google Cloud Console:"
            echo "https://console.cloud.google.com/apis/library/run.googleapis.com?project=${{ env.PROJECT_ID }}"
            exit 1
          fi

          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/app:${{ github.sha }} \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --port 8080 \
            --memory 256Mi \
            --cpu 1 \
            --min-instances 0 \
            --max-instances 1 \
            --set-env-vars NODE_ENV=production

      - name: Show Service URL
        run: |
          echo "‚ú® Deployment complete!"
          echo "Service URL: $(gcloud run services describe ${{ env.SERVICE_NAME }} --region ${{ env.REGION }} --format 'value(status.url)')" 